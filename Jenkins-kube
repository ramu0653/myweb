pipeline {
    agent any
    
    stages {
        stage("Git Checkout") {
            steps {
                git credentialsId: 'Git_cred', url: 'https://github.com/ramu0653/myweb.git'
            }
        }
        stage("Maven Build") {
            steps {
                sh "mvn clean sonar:sonar package"
            }
        }
        stage('Upload War To Nexus') {
            steps {
                nexusArtifactUploader artifacts: [
                    [
                        artifactId: 'myweb', 
                        classifier: '', 
                        file: "target/myweb-8.2.0.war", 
                        type: 'war'
                    ]
                ], 
                credentialsId: 'nexus3', 
                groupId: 'in.javahome', 
                nexusUrl: '13.126.60.207:8081', 
                nexusVersion: 'nexus3', 
                protocol: 'http',  
                repository: 'sample-releases', 
                version: '8.2.0'
            }
        }
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t ramu0653/spring-boot-mongo .'
            }
        }
        stage('Push Docker Image') {
            steps {
                withCredentials([string(credentialsId: 'DOCKER_HUB_CREDENTIALS', variable: 'DOCKER_HUB_CREDENTIALS')]) {
                    sh "docker login -u ramu0653 -p \${DOCKER_HUB_CREDENTIALS}"  // Escape the dollar sign
                }
                sh 'docker push ramu0653/spring-boot-mongo'
            }
        }
        stage("Deploy To Kubernetes Cluster") {  // Corrected the stage name spelling
            steps {
                kubernetesDeploy(
                    configs: 'springBoot.yml', 
                    kubeconfigId: 'KUBERNETES_CLUSTER_CONFIG',
                    enableConfigSubstitution: true
                )
            }
        }
    }
}
